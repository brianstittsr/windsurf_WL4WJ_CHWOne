'use client';

import React from 'react';
import { Container, Row, Col, Card, Button } from 'react-bootstrap';
import { useAuth } from '@/contexts/AuthContext';
import { UserRole } from '@/types/platform.types';
import Link from 'next/link';
import { 
  FaTachometerAlt, 
  FaUsers, 
  FaProjectDiagram, 
  FaMoneyBillWave, 
  FaDatabase, 
  FaExchangeAlt, 
  FaMapMarkerAlt, 
  FaChartBar, 
  FaDownload, 
  FaCog,
  FaArrowRight,
  FaWpforms,
  FaBriefcase
} from 'react-icons/fa';

interface PlatformCard {
  title: string;
  description: string;
  href: string;
  icon: React.ComponentType<any>;
  color: string;
  roles: UserRole[];
}

export default function PlatformLanding() {
  const { currentUser } = useAuth();

  const platformCards: PlatformCard[] = [
    {
      title: 'Dashboard',
      description: 'Overview of platform metrics, active projects, and key performance indicators',
      href: '/dashboard',
      icon: FaTachometerAlt,
      color: 'primary',
      roles: [UserRole.ADMIN, UserRole.CHW_COORDINATOR, UserRole.CHW, UserRole.NONPROFIT_STAFF]
    },
    {
      title: 'Community Health Workers',
      description: 'Manage CHW profiles, certifications, assignments, and performance tracking',
      href: '/chws',
      icon: FaUsers,
      color: 'success',
      roles: [UserRole.ADMIN, UserRole.CHW_COORDINATOR]
    },
    {
      title: 'Projects',
      description: 'Create and manage community health projects with timeline and resource tracking',
      href: '/projects',
      icon: FaProjectDiagram,
      color: 'info',
      roles: [UserRole.ADMIN, UserRole.CHW_COORDINATOR, UserRole.NONPROFIT_STAFF]
    },
    {
      title: 'Grants',
      description: 'Track funding sources, budgets, compliance requirements, and reporting schedules',
      href: '/grants',
      icon: FaMoneyBillWave,
      color: 'warning',
      roles: [UserRole.ADMIN, UserRole.CHW_COORDINATOR, UserRole.NONPROFIT_STAFF]
    },
    {
      title: 'Datasets',
      description: 'Manage and analyze platform data with privacy-compliant export capabilities',
      href: '/datasets',
      icon: FaDatabase,
      color: 'secondary',
      roles: [UserRole.ADMIN, UserRole.CHW_COORDINATOR, UserRole.NONPROFIT_STAFF]
    },
    {
      title: 'Referral Communications',
      description: 'Track client referrals, outcomes, and communication logs between providers',
      href: '/referrals',
      icon: FaExchangeAlt,
      color: 'primary',
      roles: [UserRole.ADMIN, UserRole.CHW_COORDINATOR, UserRole.CHW, UserRole.NONPROFIT_STAFF]
    },
    {
      title: 'Region 5 Resources',
      description: 'Directory of community resources, services, and location-based assistance',
      href: '/resources',
      icon: FaMapMarkerAlt,
      color: 'success',
      roles: [UserRole.ADMIN, UserRole.CHW_COORDINATOR, UserRole.CHW, UserRole.NONPROFIT_STAFF]
    },
    {
      title: 'Empower Surveys',
      description: 'Manage survey collection, analysis, and integration with the Empower Project',
      href: '/surveys',
      icon: FaChartBar,
      color: 'info',
      roles: [UserRole.ADMIN, UserRole.CHW_COORDINATOR, UserRole.NONPROFIT_STAFF]
    },
    {
      title: 'API Access',
      description: 'External system integrations, API keys, and NC C.A.R.E. 360 connectivity',
      href: '/api-access',
      icon: FaDownload,
      color: 'warning',
      roles: [UserRole.ADMIN, UserRole.NONPROFIT_STAFF]
    },
    {
      title: 'Forms & Surveys',
      description: 'Create and manage custom forms, surveys, and data collection tools',
      href: '/forms',
      icon: FaWpforms,
      color: 'warning',
      roles: [UserRole.ADMIN, UserRole.CHW_COORDINATOR, UserRole.NONPROFIT_STAFF]
    },
    {
      title: 'Workforce Development',
      description: 'Connect CHW training programs with employment opportunities',
      href: '/workforce',
      icon: FaBriefcase,
      color: 'info',
      roles: [UserRole.ADMIN, UserRole.CHW_COORDINATOR, UserRole.NONPROFIT_STAFF]
    },
    {
      title: 'Settings',
      description: 'Platform configuration, user preferences, and system administration',
      href: '/settings',
      icon: FaCog,
      color: 'secondary',
      roles: [UserRole.ADMIN, UserRole.CHW_COORDINATOR, UserRole.CHW, UserRole.NONPROFIT_STAFF]
    }
  ];

  // Mock user role for testing - in production this would come from user profile
  const userRole = currentUser?.email === 'admin@example.com' ? UserRole.ADMIN : UserRole.CHW_COORDINATOR;

  const filteredCards = platformCards.filter(card => 
    card.roles.includes(userRole)
  );

  const getButtonVariant = (color: string) => {
    switch (color) {
      case 'primary': return 'primary';
      case 'success': return 'success';
      case 'info': return 'info';
      case 'warning': return 'warning';
      case 'secondary': return 'secondary';
      default: return 'primary';
    }
  };

  const getIconBgColor = (color: string) => {
    switch (color) {
      case 'primary': return 'rgba(13, 110, 253, 0.1)';
      case 'success': return 'rgba(25, 135, 84, 0.1)';
      case 'info': return 'rgba(13, 202, 240, 0.1)';
      case 'warning': return 'rgba(255, 193, 7, 0.1)';
      case 'secondary': return 'rgba(108, 117, 125, 0.1)';
      default: return 'rgba(13, 110, 253, 0.1)';
    }
  };

  const getIconColor = (color: string) => {
    switch (color) {
      case 'primary': return '#0d6efd';
      case 'success': return '#198754';
      case 'info': return '#0dcaf0';
      case 'warning': return '#ffc107';
      case 'secondary': return '#6c757d';
      default: return '#0d6efd';
    }
  };

  return (
    <Container fluid className="p-4">
      <Row className="mb-5">
        <Col className="text-center">
          <h1 className="text-primary">CHWOne Platform</h1>
          <h4 className="text-muted">
            Welcome back, {currentUser?.displayName || currentUser?.email}!
          </h4>
          <p className="text-muted">
            Women Leading for Wellness and Justice â€¢ Community Health Worker Management Platform
          </p>
        </Col>
      </Row>

      <Row className="mb-5">
        <Col>
          <Card className="bg-light">
            <Card.Body>
              <Row>
                <Col md={8}>
                  <h5>ðŸ”’ HIPAA Compliant Platform</h5>
                  <p className="text-muted mb-0">
                    All client data is encrypted, access is logged for audit purposes, and privacy regulations are strictly enforced.
                  </p>
                </Col>
                <Col md={4} className="d-flex justify-content-end align-items-center">
                  <span className="text-success fw-bold">âœ“ Fully Compliant</span>
                </Col>
              </Row>
            </Card.Body>
          </Card>
        </Col>
      </Row>

      <Row className="mb-4">
        <Col>
          <h2>Platform Areas</h2>
          <p className="text-muted">
            Select an area below to access its management interface. Your access is based on your role: <strong>{userRole}</strong>
          </p>
        </Col>
      </Row>

      <Row className="g-4">
        {filteredCards.map((card) => {
          const IconComponent = card.icon;
          
          return (
            <Col key={card.href} md={6} lg={4} className="mb-4">
              <Card 
                className="h-100 shadow-sm"
                style={{ 
                  transition: 'transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out',
                  cursor: 'pointer'
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'translateY(-5px)';
                  e.currentTarget.style.boxShadow = '0 8px 25px rgba(0,0,0,0.15)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'translateY(0)';
                  e.currentTarget.style.boxShadow = '';
                }}
              >
                <Card.Body className="d-flex flex-column">
                  <div className="d-flex align-items-center mb-3">
                    <div style={{
                      backgroundColor: getIconBgColor(card.color),
                      padding: '12px',
                      borderRadius: '50%',
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center',
                      marginRight: '16px'
                    }}>
                      <IconComponent style={{ color: getIconColor(card.color), fontSize: '20px' }} />
                    </div>
                    <h5 className="mb-0">{card.title}</h5>
                  </div>
                  <p className="text-muted flex-grow-1">
                    {card.description}
                  </p>
                  <Link href={card.href} className="text-decoration-none mt-3">
                    <Button variant={getButtonVariant(card.color)} className="w-100">
                      <div className="d-flex align-items-center justify-content-center">
                        <span>Access {card.title}</span>
                        <FaArrowRight className="ms-2" />
                      </div>
                    </Button>
                  </Link>
                </Card.Body>
              </Card>
            </Col>
          );
        })}
      </Row>

      <Row className="mt-5">
        <Col className="text-center">
          <h5 className="text-muted">Quick Navigation</h5>
          <p className="text-muted small">
            You can also use the sidebar navigation on the left to quickly access any platform area.
            On mobile devices, tap the menu icon (â˜°) to access the sidebar.
          </p>
        </Col>
      </Row>
    </Container>
  );
}
