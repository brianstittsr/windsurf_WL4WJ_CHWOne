'use client';

import React, { useState } from 'react';
import { Container, Row, Col, Card, Button, Form, Nav, Alert } from 'react-bootstrap';
import { useAuth } from '@/contexts/AuthContext';
import { FaUser, FaCog, FaShieldAlt, FaBell, FaDatabase } from 'react-icons/fa';

interface UserSettings {
  notifications: {
    email: boolean;
    sms: boolean;
    dashboard: boolean;
  };
  privacy: {
    shareData: boolean;
    auditLog: boolean;
    profileVisibility: 'public' | 'private' | 'organization';
    dataSharing: 'enabled' | 'disabled';
  };
  profile: {
    displayName: string;
    phoneNumber: string;
    organization: string;
  };
  preferences: {
    theme: 'light' | 'dark' | 'auto';
    language: string;
    timezone: string;
  };
}

export default function SettingsManagement() {
  const { currentUser } = useAuth();
  const [settings, setSettings] = useState<UserSettings>({
    notifications: {
      email: true,
      sms: false,
      dashboard: true
    },
    privacy: {
      shareData: false,
      auditLog: true,
      profileVisibility: 'public',
      dataSharing: 'enabled'
    },
    profile: {
      displayName: '',
      phoneNumber: '',
      organization: ''
    },
    preferences: {
      theme: 'light',
      language: 'en',
      timezone: 'America/New_York'
    }
  });
  const [saveMessage, setSaveMessage] = useState('');
  const [activeTab, setActiveTab] = useState('profile');

  const handleSave = async () => {
    try {
      // Check if we're in test mode
      const isTestMode = process.env.NODE_ENV === 'development' && 
                         process.env.NEXT_PUBLIC_BYPASS_AUTH === 'true';

      if (isTestMode) {
        setSaveMessage('Settings saved successfully! (Test Mode)');
        setTimeout(() => setSaveMessage(''), 3000);
        return;
      }

      // In production, save to Firebase/backend
      setSaveMessage('Settings saved successfully!');
      setTimeout(() => setSaveMessage(''), 3000);
    } catch (error) {
      console.error('Error saving settings:', error);
      setSaveMessage('Error saving settings. Please try again.');
      setTimeout(() => setSaveMessage(''), 3000);
    }
  };

  return (
    <Container fluid className="p-4">
      <Row className="mb-4">
        <Col>
          <h2 className="fw-bold">Settings</h2>
          <p className="text-muted">Manage your account preferences and platform settings.</p>
        </Col>
      </Row>

      {saveMessage && (
        <Row className="mb-4">
          <Col>
            <Alert variant={saveMessage.includes('Error') ? 'danger' : 'success'}>
              {saveMessage}
            </Alert>
          </Col>
        </Row>
      )}

      <Row>
        <Col>
          <Card>
            <Card.Header>
              <Nav variant="tabs" className="border-bottom-0">
                <Nav.Item>
                  <Nav.Link 
                    active={activeTab === 'profile'}
                    onClick={() => setActiveTab('profile')}
                    className="d-flex align-items-center"
                  >
                    <FaUser className="me-2" /> Profile
                  </Nav.Link>
                </Nav.Item>
                <Nav.Item>
                  <Nav.Link 
                    active={activeTab === 'notifications'}
                    onClick={() => setActiveTab('notifications')}
                    className="d-flex align-items-center"
                  >
                    <FaBell className="me-2" /> Notifications
                  </Nav.Link>
                </Nav.Item>
                <Nav.Item>
                  <Nav.Link 
                    active={activeTab === 'privacy'}
                    onClick={() => setActiveTab('privacy')}
                    className="d-flex align-items-center"
                  >
                    <FaShieldAlt className="me-2" /> Privacy
                  </Nav.Link>
                </Nav.Item>
                <Nav.Item>
                  <Nav.Link 
                    active={activeTab === 'preferences'}
                    onClick={() => setActiveTab('preferences')}
                    className="d-flex align-items-center"
                  >
                    <FaCog className="me-2" /> Preferences
                  </Nav.Link>
                </Nav.Item>
              </Nav>
            </Card.Header>

            <Card.Body className="p-4">
              {activeTab === 'profile' && (
                <div>
                  <h4 className="mb-4">Profile Settings</h4>
                  <Row>
                    <Col md={6} className="mb-3">
                      <Form.Group>
                        <Form.Label>Email</Form.Label>
                        <Form.Control
                          type="email"
                          value={currentUser?.email || ''}
                          disabled
                          className="bg-light"
                        />
                      </Form.Group>
                    </Col>
                    <Col md={6} className="mb-3">
                      <Form.Group>
                        <Form.Label>Display Name</Form.Label>
                        <Form.Control
                          type="text"
                          value={settings.profile.displayName}
                          onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSettings({
                            ...settings,
                            profile: { ...settings.profile, displayName: e.target.value }
                          })}
                        />
                      </Form.Group>
                    </Col>
                    <Col md={6} className="mb-3">
                      <Form.Group>
                        <Form.Label>Phone Number</Form.Label>
                        <Form.Control
                          type="tel"
                          value={settings.profile.phoneNumber}
                          onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSettings({
                            ...settings,
                            profile: { ...settings.profile, phoneNumber: e.target.value }
                          })}
                        />
                      </Form.Group>
                    </Col>
                    <Col md={6} className="mb-3">
                      <Form.Group>
                        <Form.Label>Organization</Form.Label>
                        <Form.Control
                          type="text"
                          value={settings.profile.organization}
                          onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSettings({
                            ...settings,
                            profile: { ...settings.profile, organization: e.target.value }
                          })}
                        />
                      </Form.Group>
                    </Col>
                  </Row>
                </div>
              )}

              {activeTab === 'notifications' && (
                <div>
                  <h4 className="mb-4">Notification Settings</h4>
                  <Form>
                    <Form.Check
                      type="checkbox"
                      id="email-notifications"
                      label="Email notifications"
                      checked={settings.notifications.email}
                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSettings({
                        ...settings,
                        notifications: { ...settings.notifications, email: e.target.checked }
                      })}
                      className="mb-3"
                    />
                    <Form.Check
                      type="checkbox"
                      id="sms-notifications"
                      label="SMS notifications"
                      checked={settings.notifications.sms}
                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSettings({
                        ...settings,
                        notifications: { ...settings.notifications, sms: e.target.checked }
                      })}
                      className="mb-3"
                    />
                    <Form.Check
                      type="checkbox"
                      id="dashboard-notifications"
                      label="Dashboard notifications"
                      checked={settings.notifications.dashboard}
                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSettings({
                        ...settings,
                        notifications: { ...settings.notifications, dashboard: e.target.checked }
                      })}
                      className="mb-3"
                    />
                  </Form>
                </div>
              )}

              {activeTab === 'privacy' && (
                <div>
                  <h4 className="mb-4">Privacy Settings</h4>
                  <Row>
                    <Col md={6} className="mb-3">
                      <Form.Group>
                        <Form.Label>Profile Visibility</Form.Label>
                        <Form.Select
                          value={settings.privacy.profileVisibility}
                          onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setSettings({
                            ...settings,
                            privacy: { ...settings.privacy, profileVisibility: e.target.value as 'public' | 'private' | 'organization' }
                          })}
                        >
                          <option value="public">Public</option>
                          <option value="organization">Organization Only</option>
                          <option value="private">Private</option>
                        </Form.Select>
                      </Form.Group>
                    </Col>
                    <Col md={6} className="mb-3">
                      <Form.Group>
                        <Form.Label>Data Sharing</Form.Label>
                        <Form.Select
                          value={settings.privacy.dataSharing}
                          onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setSettings({
                            ...settings,
                            privacy: { ...settings.privacy, dataSharing: e.target.value as 'enabled' | 'disabled' }
                          })}
                        >
                          <option value="enabled">Enabled</option>
                          <option value="disabled">Disabled</option>
                        </Form.Select>
                      </Form.Group>
                    </Col>
                  </Row>
                </div>
              )}

              {activeTab === 'preferences' && (
                <div>
                  <h4 className="mb-4">Preferences</h4>
                  <Row>
                    <Col md={6} className="mb-3">
                      <Form.Group>
                        <Form.Label>Theme</Form.Label>
                        <Form.Select
                          value={settings.preferences.theme}
                          onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setSettings({
                            ...settings,
                            preferences: { ...settings.preferences, theme: e.target.value as 'light' | 'dark' | 'auto' }
                          })}
                        >
                          <option value="light">Light</option>
                          <option value="dark">Dark</option>
                          <option value="auto">Auto</option>
                        </Form.Select>
                      </Form.Group>
                    </Col>
                    <Col md={6} className="mb-3">
                      <Form.Group>
                        <Form.Label>Language</Form.Label>
                        <Form.Select
                          value={settings.preferences.language}
                          onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setSettings({
                            ...settings,
                            preferences: { ...settings.preferences, language: e.target.value }
                          })}
                        >
                          <option value="en">English</option>
                          <option value="es">Spanish</option>
                        </Form.Select>
                      </Form.Group>
                    </Col>
                  </Row>
                </div>
              )}

              <div className="mt-4 pt-3 border-top">
                <Button variant="primary" onClick={handleSave}>
                  <FaDatabase className="me-2" /> Save Settings
                </Button>
              </div>
            </Card.Body>
          </Card>
        </Col>
      </Row>
    </Container>
  );
}
