"use client";

import { mailchimp, newsletter } from "@/resources";
import { Form, Button, Container, Row, Col } from "react-bootstrap";
import { useState } from "react";

function debounce<T extends (...args: any[]) => void>(func: T, delay: number): T {
  let timeout: ReturnType<typeof setTimeout>;
  return ((...args: Parameters<T>) => {
    clearTimeout(timeout);
    timeout = setTimeout(() => func(...args), delay);
  }) as T;
}

interface MailchimpProps {
  className?: string;
}

export const Mailchimp: React.FC<MailchimpProps> = ({ className }) => {
  const [email, setEmail] = useState<string>("");
  const [error, setError] = useState<string>("");
  const [touched, setTouched] = useState<boolean>(false);

  const validateEmail = (email: string): boolean => {
    if (email === "") {
      return true;
    }

    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailPattern.test(email);
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value;
    setEmail(value);

    if (!validateEmail(value)) {
      setError("Please enter a valid email address.");
    } else {
      setError("");
    }
  };

  const debouncedHandleChange = debounce(handleChange, 2000);

  const handleBlur = () => {
    setTouched(true);
    if (!validateEmail(email)) {
      setError("Please enter a valid email address.");
    }
  };

  if (newsletter.display === false) return null;

  return (
    <Container 
      fluid 
      className={`py-5 px-4 rounded-4 mb-4 text-center position-relative overflow-hidden ${className}`}
      style={{
        background: 'var(--bs-light)',
        border: '1px solid rgba(0,0,0,0.1)'
      }}
    >
      {/* Background Effects */}
      <div className="position-absolute top-0 start-0 w-100 h-100" style={{
        background: mailchimp.effects.gradient.display ? 
          `linear-gradient(${mailchimp.effects.gradient.tilt}deg, 
          ${mailchimp.effects.gradient.colorStart}, 
          ${mailchimp.effects.gradient.colorEnd})` : 'transparent',
        opacity: mailchimp.effects.gradient.opacity,
        zIndex: 0
      }}></div>
      
      <div className="position-relative z-1">
        <Row className="justify-content-center">
          <Col xs={12} md={8} lg={6}>
            <h2 className="mb-3">{newsletter.title}</h2>
            <p className="mb-4 text-muted">{newsletter.description}</p>
            
            <form
              action={mailchimp.action}
              method="post"
              id="mc-embedded-subscribe-form"
              name="mc-embedded-subscribe-form"
              className="mb-3"
            >
              <Row className="justify-content-center g-2">
                <Col xs={12} md={8}>
                  <Form.Group>
                    <Form.Control
                      formNoValidate
                      id="mce-EMAIL"
                      name="EMAIL"
                      type="email"
                      placeholder="Email"
                      required
                      onChange={(e) => {
                        if (error) {
                          handleChange(e as React.ChangeEvent<HTMLInputElement>);
                        } else {
                          debouncedHandleChange(e as React.ChangeEvent<HTMLInputElement>);
                        }
                      }}
                      onBlur={handleBlur}
                      isInvalid={!!error && touched}
                    />
                    {error && touched && (
                      <Form.Control.Feedback type="invalid">
                        {error}
                      </Form.Control.Feedback>
                    )}
                  </Form.Group>
                </Col>
                
                <Col xs={12} md={4}>
                  <Button 
                    id="mc-embedded-subscribe" 
                    value="Subscribe" 
                    type="submit"
                    className="w-100"
                  >
                    Subscribe
                  </Button>
                </Col>
              </Row>
              
              {/* Hidden fields for Mailchimp */}
              <div style={{ display: "none" }}>
                <input
                  type="checkbox"
                  readOnly
                  name="group[3492][1]"
                  id="mce-group[3492]-3492-0"
                  value=""
                  checked
                />
              </div>
              <div id="mce-responses" className="clearfalse">
                <div className="response" id="mce-error-response" style={{ display: "none" }}></div>
                <div className="response" id="mce-success-response" style={{ display: "none" }}></div>
              </div>
              <div aria-hidden="true" style={{ position: "absolute", left: "-5000px" }}>
                <input
                  type="text"
                  readOnly
                  name="b_c1a5a210340eb6c7bff33b2ba_0462d244aa"
                  tabIndex={-1}
                  value=""
                />
              </div>
            </form>
          </Col>
        </Row>
      </div>
    </Container>
  );
};
